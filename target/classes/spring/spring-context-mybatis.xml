<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--自动扫描含有@Service的类，将其注入为bean -->
    <context:component-scan base-package="com.oam.service" />
    <context:component-scan base-package="com.oam.Dao" />

    <!-- 1. 数据源 : DriverManagerDataSource -->
    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/oa_m"/>
        <property name="username" value="root"/>
        <property name="password" value="5835938"/>
    </bean>

    <!--
        2. mybatis的SqlSession的工厂: SqlSessionFactoryBean
            dataSource / typeAliasesPackage
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="typeAliasesPackage" value="com.oam.model"/>
    </bean>

    <!--
        3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer
            sqlSessionFactory / basePackage
    -->
    <bean id="config" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.oam.Dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!-- 4. 事务管理 : DataSourceTransactionManager -->
    <bean id="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!-- 5. 使用声明式事务 -->
    <tx:annotation-driven transaction-manager="manager" />

</beans>